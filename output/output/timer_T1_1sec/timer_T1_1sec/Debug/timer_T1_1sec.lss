
timer_T1_1sec.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000ca  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  000000ca  0000013e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000006cc  00000000  00000000  00000140  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000085  00000000  00000000  0000080c  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000080  00000000  00000000  00000898  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000338  00000000  00000000  00000918  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000009d  00000000  00000000  00000c50  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002a6  00000000  00000000  00000ced  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  00000f94  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000000b9  00000000  00000000  00000fc8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ea ec       	ldi	r30, 0xCA	; 202
  68:	f0 e0       	ldi	r31, 0x00	; 0
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 36       	cpi	r26, 0x60	; 96
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 57 00 	call	0xae	; 0xae <main>
  8a:	0c 94 63 00 	jmp	0xc6	; 0xc6 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <delay>:

void delay()
{
	

	TCCR1B = TCCR1B| 1<< CS12| 1<< CS10;     //nomal cpu frequency with prescaler =1024
  92:	8e b5       	in	r24, 0x2e	; 46
  94:	85 60       	ori	r24, 0x05	; 5
  96:	8e bd       	out	0x2e, r24	; 46
	TCNT1 = 64560;
  98:	80 e3       	ldi	r24, 0x30	; 48
  9a:	9c ef       	ldi	r25, 0xFC	; 252
  9c:	9d bd       	out	0x2d, r25	; 45
  9e:	8c bd       	out	0x2c, r24	; 44
	while((TIFR & (1<<2))==0){}   //while overflow flag bit of timer0 is 0 i.e is not filled...counting continue
  a0:	08 b6       	in	r0, 0x38	; 56
  a2:	02 fe       	sbrs	r0, 2
  a4:	fd cf       	rjmp	.-6      	; 0xa0 <delay+0xe>
	TIFR= TIFR|1<<2;
  a6:	88 b7       	in	r24, 0x38	; 56
  a8:	84 60       	ori	r24, 0x04	; 4
  aa:	88 bf       	out	0x38, r24	; 56
	
	//TCCR0 = 0x05;     //nomal cpu frequency with prescaler =1024
	//TCNT0 = 0x00;
	//while((TIFR & (1<<0))==0){}   //while overflow flag bit of timer0 is 0 i.e is not filled...counting continue
	//TIFR= TIFR|1<<0;
}
  ac:	08 95       	ret

000000ae <main>:
int main(void)
{
	
	DDRA = 0x01;
  ae:	81 e0       	ldi	r24, 0x01	; 1
  b0:	8a bb       	out	0x1a, r24	; 26
    while(1)
    {
		delay();
		PORTA = 0x01;
  b2:	c1 e0       	ldi	r28, 0x01	; 1
{
	
	DDRA = 0x01;
    while(1)
    {
		delay();
  b4:	0e 94 49 00 	call	0x92	; 0x92 <delay>
		PORTA = 0x01;
  b8:	cb bb       	out	0x1b, r28	; 27
		delay();
  ba:	0e 94 49 00 	call	0x92	; 0x92 <delay>
		PORTA = 0x00;
  be:	1b ba       	out	0x1b, r1	; 27
		delay();
  c0:	0e 94 49 00 	call	0x92	; 0x92 <delay>
  c4:	f7 cf       	rjmp	.-18     	; 0xb4 <main+0x6>

000000c6 <_exit>:
  c6:	f8 94       	cli

000000c8 <__stop_program>:
  c8:	ff cf       	rjmp	.-2      	; 0xc8 <__stop_program>
