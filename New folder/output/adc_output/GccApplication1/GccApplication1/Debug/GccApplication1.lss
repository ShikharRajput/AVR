
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000004b8  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  000004b8  0000052c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         0000198c  00000000  00000000  0000052c  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      0000051e  00000000  00000000  00001eb8  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 000000c0  00000000  00000000  000023d8  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000075e  00000000  00000000  00002498  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000001f5  00000000  00000000  00002bf6  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000004dd  00000000  00000000  00002deb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000bc  00000000  00000000  000032c8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000168  00000000  00000000  00003384  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000167  00000000  00000000  000034ec  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e8 eb       	ldi	r30, 0xB8	; 184
  68:	f4 e0       	ldi	r31, 0x04	; 4
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 36       	cpi	r26, 0x60	; 96
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 be 00 	call	0x17c	; 0x17c <main>
  8a:	0c 94 5a 02 	jmp	0x4b4	; 0x4b4 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <adc_init>:
	
}

void adc_init()
{
	ADMUX=0x40;  // ref 5v channel adc0
  92:	80 e4       	ldi	r24, 0x40	; 64
  94:	87 b9       	out	0x07, r24	; 7
	ADCSRA=ADCSRA|1<<ADEN|1<<ADATE|1<<ADPS0|1<ADPS1|1<<ADPS2;
  96:	86 b1       	in	r24, 0x06	; 6
  98:	85 6a       	ori	r24, 0xA5	; 165
  9a:	86 b9       	out	0x06, r24	; 6
}
  9c:	08 95       	ret

0000009e <adc_convert>:

void adc_convert()
{
	
	float a, v;
	ADCSRA=ADCSRA|1<<ADSC;
  9e:	36 9a       	sbi	0x06, 6	; 6
	while((ADCSRA&(1<<ADIF))==0){}
  a0:	34 9b       	sbis	0x06, 4	; 6
  a2:	fe cf       	rjmp	.-4      	; 0xa0 <adc_convert+0x2>
	//PORTB=ADCL;
	//PORTD=ADCH;
    a = ADC;
  a4:	64 b1       	in	r22, 0x04	; 4
  a6:	75 b1       	in	r23, 0x05	; 5
  a8:	80 e0       	ldi	r24, 0x00	; 0
  aa:	90 e0       	ldi	r25, 0x00	; 0
  ac:	0e 94 42 01 	call	0x284	; 0x284 <__floatunsisf>
	v = (((a*5)/1023)*100);
  b0:	20 e0       	ldi	r18, 0x00	; 0
  b2:	30 e0       	ldi	r19, 0x00	; 0
  b4:	40 ea       	ldi	r20, 0xA0	; 160
  b6:	50 e4       	ldi	r21, 0x40	; 64
  b8:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <__mulsf3>
  bc:	20 e0       	ldi	r18, 0x00	; 0
  be:	30 ec       	ldi	r19, 0xC0	; 192
  c0:	4f e7       	ldi	r20, 0x7F	; 127
  c2:	54 e4       	ldi	r21, 0x44	; 68
  c4:	0e 94 da 00 	call	0x1b4	; 0x1b4 <__divsf3>
  c8:	20 e0       	ldi	r18, 0x00	; 0
  ca:	30 e0       	ldi	r19, 0x00	; 0
  cc:	48 ec       	ldi	r20, 0xC8	; 200
  ce:	52 e4       	ldi	r21, 0x42	; 66
  d0:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <__mulsf3>
	//t = v*100;
	//ascii(a);
	ascii(v);
  d4:	0e 94 91 00 	call	0x122	; 0x122 <ascii>
	//ascii(t);
}
  d8:	08 95       	ret

000000da <lcd_data>:
	
}

void lcd_data(char x)
{
	PORTB=x;
  da:	88 bb       	out	0x18, r24	; 24
	PORTA=PORTA|1<<rs;
  dc:	d9 9a       	sbi	0x1b, 1	; 27
	PORTA=PORTA&~(1<<rw);
  de:	da 98       	cbi	0x1b, 2	; 27
	PORTA=PORTA|1<<en;
  e0:	db 9a       	sbi	0x1b, 3	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  e2:	8f ec       	ldi	r24, 0xCF	; 207
  e4:	97 e0       	ldi	r25, 0x07	; 7
  e6:	01 97       	sbiw	r24, 0x01	; 1
  e8:	f1 f7       	brne	.-4      	; 0xe6 <lcd_data+0xc>
  ea:	00 c0       	rjmp	.+0      	; 0xec <lcd_data+0x12>
  ec:	00 00       	nop
	_delay_ms(1);
	PORTA=PORTA&~(1<<en);
  ee:	db 98       	cbi	0x1b, 3	; 27
  f0:	8f ec       	ldi	r24, 0xCF	; 207
  f2:	97 e0       	ldi	r25, 0x07	; 7
  f4:	01 97       	sbiw	r24, 0x01	; 1
  f6:	f1 f7       	brne	.-4      	; 0xf4 <lcd_data+0x1a>
  f8:	00 c0       	rjmp	.+0      	; 0xfa <lcd_data+0x20>
  fa:	00 00       	nop
	_delay_ms(1);
}
  fc:	08 95       	ret

000000fe <lcd_cmd>:
	}
}

void lcd_cmd(char x)
{
	PORTB=x;
  fe:	88 bb       	out	0x18, r24	; 24
	PORTA=PORTA&~(1<<rs);
 100:	d9 98       	cbi	0x1b, 1	; 27
	PORTA=PORTA&~(1<<rw);
 102:	da 98       	cbi	0x1b, 2	; 27
	PORTA=PORTA|(1<<en);
 104:	db 9a       	sbi	0x1b, 3	; 27
 106:	8f ec       	ldi	r24, 0xCF	; 207
 108:	97 e0       	ldi	r25, 0x07	; 7
 10a:	01 97       	sbiw	r24, 0x01	; 1
 10c:	f1 f7       	brne	.-4      	; 0x10a <lcd_cmd+0xc>
 10e:	00 c0       	rjmp	.+0      	; 0x110 <lcd_cmd+0x12>
 110:	00 00       	nop
	_delay_ms(1);
	PORTA=PORTA&~(1<<en);
 112:	db 98       	cbi	0x1b, 3	; 27
 114:	8f ec       	ldi	r24, 0xCF	; 207
 116:	97 e0       	ldi	r25, 0x07	; 7
 118:	01 97       	sbiw	r24, 0x01	; 1
 11a:	f1 f7       	brne	.-4      	; 0x118 <lcd_cmd+0x1a>
 11c:	00 c0       	rjmp	.+0      	; 0x11e <lcd_cmd+0x20>
 11e:	00 00       	nop
	_delay_ms(1);
	
}
 120:	08 95       	ret

00000122 <ascii>:
	PORTA=PORTA|1<<en;
	_delay_ms(1);
	PORTA=PORTA&~(1<<en);
	_delay_ms(1);
}
void ascii(int a){
 122:	ef 92       	push	r14
 124:	ff 92       	push	r15
 126:	1f 93       	push	r17
 128:	cf 93       	push	r28
 12a:	df 93       	push	r29
 12c:	18 2f       	mov	r17, r24
 12e:	d9 2f       	mov	r29, r25
	char pos = 0xc3;
 130:	c3 ec       	ldi	r28, 0xC3	; 195
	int i, a1;
	for(i=0; i<=3; i++){
		lcd_cmd(pos);
		a1 = a%10;
 132:	0f 2e       	mov	r0, r31
 134:	fa e0       	ldi	r31, 0x0A	; 10
 136:	ef 2e       	mov	r14, r31
 138:	ff 24       	eor	r15, r15
 13a:	f0 2d       	mov	r31, r0
}
void ascii(int a){
	char pos = 0xc3;
	int i, a1;
	for(i=0; i<=3; i++){
		lcd_cmd(pos);
 13c:	8c 2f       	mov	r24, r28
 13e:	0e 94 7f 00 	call	0xfe	; 0xfe <lcd_cmd>
		a1 = a%10;
 142:	81 2f       	mov	r24, r17
 144:	9d 2f       	mov	r25, r29
 146:	b7 01       	movw	r22, r14
 148:	0e 94 33 02 	call	0x466	; 0x466 <__divmodhi4>
		a /= 10;
 14c:	16 2f       	mov	r17, r22
 14e:	d7 2f       	mov	r29, r23
		lcd_data(a1+48);
 150:	80 5d       	subi	r24, 0xD0	; 208
 152:	0e 94 6d 00 	call	0xda	; 0xda <lcd_data>
		pos-- ;
 156:	c1 50       	subi	r28, 0x01	; 1
	_delay_ms(1);
}
void ascii(int a){
	char pos = 0xc3;
	int i, a1;
	for(i=0; i<=3; i++){
 158:	cf 3b       	cpi	r28, 0xBF	; 191
 15a:	81 f7       	brne	.-32     	; 0x13c <ascii+0x1a>
		a1 = a%10;
		a /= 10;
		lcd_data(a1+48);
		pos-- ;
	}
}
 15c:	df 91       	pop	r29
 15e:	cf 91       	pop	r28
 160:	1f 91       	pop	r17
 162:	ff 90       	pop	r15
 164:	ef 90       	pop	r14
 166:	08 95       	ret

00000168 <lcd_init>:
}


void lcd_init()
{
	lcd_cmd(0x38);
 168:	88 e3       	ldi	r24, 0x38	; 56
 16a:	0e 94 7f 00 	call	0xfe	; 0xfe <lcd_cmd>
	lcd_cmd(0x0e);
 16e:	8e e0       	ldi	r24, 0x0E	; 14
 170:	0e 94 7f 00 	call	0xfe	; 0xfe <lcd_cmd>
	lcd_cmd(0x06);
 174:	86 e0       	ldi	r24, 0x06	; 6
 176:	0e 94 7f 00 	call	0xfe	; 0xfe <lcd_cmd>
	
}
 17a:	08 95       	ret

0000017c <main>:
int main(void)
{
	//float t;
	//float a;
	
	DDRD=0xff;
 17c:	8f ef       	ldi	r24, 0xFF	; 255
 17e:	81 bb       	out	0x11, r24	; 17
	DDRB=0xff;
 180:	87 bb       	out	0x17, r24	; 23
	DDRA=DDRA|1<<1|1<<2|1<<3;
 182:	8a b3       	in	r24, 0x1a	; 26
 184:	8e 60       	ori	r24, 0x0E	; 14
 186:	8a bb       	out	0x1a, r24	; 26
	
	lcd_init();
 188:	0e 94 b4 00 	call	0x168	; 0x168 <lcd_init>
	
	
	
	adc_init();
 18c:	0e 94 49 00 	call	0x92	; 0x92 <adc_init>
    while(1)
    {
		adc_convert();
 190:	0e 94 4f 00 	call	0x9e	; 0x9e <adc_convert>
 194:	fd cf       	rjmp	.-6      	; 0x190 <main+0x14>

00000196 <lcd_string>:
	_delay_ms(1);
	
}

void lcd_string(char *x)
{
 196:	cf 93       	push	r28
 198:	df 93       	push	r29
 19a:	ec 01       	movw	r28, r24
	while(*x !='\0')
 19c:	88 81       	ld	r24, Y
 19e:	88 23       	and	r24, r24
 1a0:	31 f0       	breq	.+12     	; 0x1ae <lcd_string+0x18>
	PORTA=PORTA&~(1<<en);
	_delay_ms(1);
	
}

void lcd_string(char *x)
 1a2:	21 96       	adiw	r28, 0x01	; 1
{
	while(*x !='\0')
	{
		lcd_data(*x);
 1a4:	0e 94 6d 00 	call	0xda	; 0xda <lcd_data>
	
}

void lcd_string(char *x)
{
	while(*x !='\0')
 1a8:	89 91       	ld	r24, Y+
 1aa:	88 23       	and	r24, r24
 1ac:	d9 f7       	brne	.-10     	; 0x1a4 <lcd_string+0xe>
	{
		lcd_data(*x);
		x++;
	}
 1ae:	df 91       	pop	r29
 1b0:	cf 91       	pop	r28
 1b2:	08 95       	ret

000001b4 <__divsf3>:
 1b4:	0c d0       	rcall	.+24     	; 0x1ce <__divsf3x>
 1b6:	ba c0       	rjmp	.+372    	; 0x32c <__fp_round>
 1b8:	b2 d0       	rcall	.+356    	; 0x31e <__fp_pscB>
 1ba:	40 f0       	brcs	.+16     	; 0x1cc <__divsf3+0x18>
 1bc:	a9 d0       	rcall	.+338    	; 0x310 <__fp_pscA>
 1be:	30 f0       	brcs	.+12     	; 0x1cc <__divsf3+0x18>
 1c0:	21 f4       	brne	.+8      	; 0x1ca <__divsf3+0x16>
 1c2:	5f 3f       	cpi	r21, 0xFF	; 255
 1c4:	19 f0       	breq	.+6      	; 0x1cc <__divsf3+0x18>
 1c6:	9b c0       	rjmp	.+310    	; 0x2fe <__fp_inf>
 1c8:	51 11       	cpse	r21, r1
 1ca:	e4 c0       	rjmp	.+456    	; 0x394 <__fp_szero>
 1cc:	9e c0       	rjmp	.+316    	; 0x30a <__fp_nan>

000001ce <__divsf3x>:
 1ce:	bf d0       	rcall	.+382    	; 0x34e <__fp_split3>
 1d0:	98 f3       	brcs	.-26     	; 0x1b8 <__divsf3+0x4>

000001d2 <__divsf3_pse>:
 1d2:	99 23       	and	r25, r25
 1d4:	c9 f3       	breq	.-14     	; 0x1c8 <__divsf3+0x14>
 1d6:	55 23       	and	r21, r21
 1d8:	b1 f3       	breq	.-20     	; 0x1c6 <__divsf3+0x12>
 1da:	95 1b       	sub	r25, r21
 1dc:	55 0b       	sbc	r21, r21
 1de:	bb 27       	eor	r27, r27
 1e0:	aa 27       	eor	r26, r26
 1e2:	62 17       	cp	r22, r18
 1e4:	73 07       	cpc	r23, r19
 1e6:	84 07       	cpc	r24, r20
 1e8:	38 f0       	brcs	.+14     	; 0x1f8 <__divsf3_pse+0x26>
 1ea:	9f 5f       	subi	r25, 0xFF	; 255
 1ec:	5f 4f       	sbci	r21, 0xFF	; 255
 1ee:	22 0f       	add	r18, r18
 1f0:	33 1f       	adc	r19, r19
 1f2:	44 1f       	adc	r20, r20
 1f4:	aa 1f       	adc	r26, r26
 1f6:	a9 f3       	breq	.-22     	; 0x1e2 <__divsf3_pse+0x10>
 1f8:	33 d0       	rcall	.+102    	; 0x260 <__divsf3_pse+0x8e>
 1fa:	0e 2e       	mov	r0, r30
 1fc:	3a f0       	brmi	.+14     	; 0x20c <__divsf3_pse+0x3a>
 1fe:	e0 e8       	ldi	r30, 0x80	; 128
 200:	30 d0       	rcall	.+96     	; 0x262 <__divsf3_pse+0x90>
 202:	91 50       	subi	r25, 0x01	; 1
 204:	50 40       	sbci	r21, 0x00	; 0
 206:	e6 95       	lsr	r30
 208:	00 1c       	adc	r0, r0
 20a:	ca f7       	brpl	.-14     	; 0x1fe <__divsf3_pse+0x2c>
 20c:	29 d0       	rcall	.+82     	; 0x260 <__divsf3_pse+0x8e>
 20e:	fe 2f       	mov	r31, r30
 210:	27 d0       	rcall	.+78     	; 0x260 <__divsf3_pse+0x8e>
 212:	66 0f       	add	r22, r22
 214:	77 1f       	adc	r23, r23
 216:	88 1f       	adc	r24, r24
 218:	bb 1f       	adc	r27, r27
 21a:	26 17       	cp	r18, r22
 21c:	37 07       	cpc	r19, r23
 21e:	48 07       	cpc	r20, r24
 220:	ab 07       	cpc	r26, r27
 222:	b0 e8       	ldi	r27, 0x80	; 128
 224:	09 f0       	breq	.+2      	; 0x228 <__divsf3_pse+0x56>
 226:	bb 0b       	sbc	r27, r27
 228:	80 2d       	mov	r24, r0
 22a:	bf 01       	movw	r22, r30
 22c:	ff 27       	eor	r31, r31
 22e:	93 58       	subi	r25, 0x83	; 131
 230:	5f 4f       	sbci	r21, 0xFF	; 255
 232:	2a f0       	brmi	.+10     	; 0x23e <__divsf3_pse+0x6c>
 234:	9e 3f       	cpi	r25, 0xFE	; 254
 236:	51 05       	cpc	r21, r1
 238:	68 f0       	brcs	.+26     	; 0x254 <__divsf3_pse+0x82>
 23a:	61 c0       	rjmp	.+194    	; 0x2fe <__fp_inf>
 23c:	ab c0       	rjmp	.+342    	; 0x394 <__fp_szero>
 23e:	5f 3f       	cpi	r21, 0xFF	; 255
 240:	ec f3       	brlt	.-6      	; 0x23c <__divsf3_pse+0x6a>
 242:	98 3e       	cpi	r25, 0xE8	; 232
 244:	dc f3       	brlt	.-10     	; 0x23c <__divsf3_pse+0x6a>
 246:	86 95       	lsr	r24
 248:	77 95       	ror	r23
 24a:	67 95       	ror	r22
 24c:	b7 95       	ror	r27
 24e:	f7 95       	ror	r31
 250:	9f 5f       	subi	r25, 0xFF	; 255
 252:	c9 f7       	brne	.-14     	; 0x246 <__divsf3_pse+0x74>
 254:	88 0f       	add	r24, r24
 256:	91 1d       	adc	r25, r1
 258:	96 95       	lsr	r25
 25a:	87 95       	ror	r24
 25c:	97 f9       	bld	r25, 7
 25e:	08 95       	ret
 260:	e1 e0       	ldi	r30, 0x01	; 1
 262:	66 0f       	add	r22, r22
 264:	77 1f       	adc	r23, r23
 266:	88 1f       	adc	r24, r24
 268:	bb 1f       	adc	r27, r27
 26a:	62 17       	cp	r22, r18
 26c:	73 07       	cpc	r23, r19
 26e:	84 07       	cpc	r24, r20
 270:	ba 07       	cpc	r27, r26
 272:	20 f0       	brcs	.+8      	; 0x27c <__divsf3_pse+0xaa>
 274:	62 1b       	sub	r22, r18
 276:	73 0b       	sbc	r23, r19
 278:	84 0b       	sbc	r24, r20
 27a:	ba 0b       	sbc	r27, r26
 27c:	ee 1f       	adc	r30, r30
 27e:	88 f7       	brcc	.-30     	; 0x262 <__divsf3_pse+0x90>
 280:	e0 95       	com	r30
 282:	08 95       	ret

00000284 <__floatunsisf>:
 284:	e8 94       	clt
 286:	09 c0       	rjmp	.+18     	; 0x29a <__floatsisf+0x12>

00000288 <__floatsisf>:
 288:	97 fb       	bst	r25, 7
 28a:	3e f4       	brtc	.+14     	; 0x29a <__floatsisf+0x12>
 28c:	90 95       	com	r25
 28e:	80 95       	com	r24
 290:	70 95       	com	r23
 292:	61 95       	neg	r22
 294:	7f 4f       	sbci	r23, 0xFF	; 255
 296:	8f 4f       	sbci	r24, 0xFF	; 255
 298:	9f 4f       	sbci	r25, 0xFF	; 255
 29a:	99 23       	and	r25, r25
 29c:	a9 f0       	breq	.+42     	; 0x2c8 <__floatsisf+0x40>
 29e:	f9 2f       	mov	r31, r25
 2a0:	96 e9       	ldi	r25, 0x96	; 150
 2a2:	bb 27       	eor	r27, r27
 2a4:	93 95       	inc	r25
 2a6:	f6 95       	lsr	r31
 2a8:	87 95       	ror	r24
 2aa:	77 95       	ror	r23
 2ac:	67 95       	ror	r22
 2ae:	b7 95       	ror	r27
 2b0:	f1 11       	cpse	r31, r1
 2b2:	f8 cf       	rjmp	.-16     	; 0x2a4 <__floatsisf+0x1c>
 2b4:	fa f4       	brpl	.+62     	; 0x2f4 <__floatsisf+0x6c>
 2b6:	bb 0f       	add	r27, r27
 2b8:	11 f4       	brne	.+4      	; 0x2be <__floatsisf+0x36>
 2ba:	60 ff       	sbrs	r22, 0
 2bc:	1b c0       	rjmp	.+54     	; 0x2f4 <__floatsisf+0x6c>
 2be:	6f 5f       	subi	r22, 0xFF	; 255
 2c0:	7f 4f       	sbci	r23, 0xFF	; 255
 2c2:	8f 4f       	sbci	r24, 0xFF	; 255
 2c4:	9f 4f       	sbci	r25, 0xFF	; 255
 2c6:	16 c0       	rjmp	.+44     	; 0x2f4 <__floatsisf+0x6c>
 2c8:	88 23       	and	r24, r24
 2ca:	11 f0       	breq	.+4      	; 0x2d0 <__floatsisf+0x48>
 2cc:	96 e9       	ldi	r25, 0x96	; 150
 2ce:	11 c0       	rjmp	.+34     	; 0x2f2 <__floatsisf+0x6a>
 2d0:	77 23       	and	r23, r23
 2d2:	21 f0       	breq	.+8      	; 0x2dc <__floatsisf+0x54>
 2d4:	9e e8       	ldi	r25, 0x8E	; 142
 2d6:	87 2f       	mov	r24, r23
 2d8:	76 2f       	mov	r23, r22
 2da:	05 c0       	rjmp	.+10     	; 0x2e6 <__floatsisf+0x5e>
 2dc:	66 23       	and	r22, r22
 2de:	71 f0       	breq	.+28     	; 0x2fc <__floatsisf+0x74>
 2e0:	96 e8       	ldi	r25, 0x86	; 134
 2e2:	86 2f       	mov	r24, r22
 2e4:	70 e0       	ldi	r23, 0x00	; 0
 2e6:	60 e0       	ldi	r22, 0x00	; 0
 2e8:	2a f0       	brmi	.+10     	; 0x2f4 <__floatsisf+0x6c>
 2ea:	9a 95       	dec	r25
 2ec:	66 0f       	add	r22, r22
 2ee:	77 1f       	adc	r23, r23
 2f0:	88 1f       	adc	r24, r24
 2f2:	da f7       	brpl	.-10     	; 0x2ea <__floatsisf+0x62>
 2f4:	88 0f       	add	r24, r24
 2f6:	96 95       	lsr	r25
 2f8:	87 95       	ror	r24
 2fa:	97 f9       	bld	r25, 7
 2fc:	08 95       	ret

000002fe <__fp_inf>:
 2fe:	97 f9       	bld	r25, 7
 300:	9f 67       	ori	r25, 0x7F	; 127
 302:	80 e8       	ldi	r24, 0x80	; 128
 304:	70 e0       	ldi	r23, 0x00	; 0
 306:	60 e0       	ldi	r22, 0x00	; 0
 308:	08 95       	ret

0000030a <__fp_nan>:
 30a:	9f ef       	ldi	r25, 0xFF	; 255
 30c:	80 ec       	ldi	r24, 0xC0	; 192
 30e:	08 95       	ret

00000310 <__fp_pscA>:
 310:	00 24       	eor	r0, r0
 312:	0a 94       	dec	r0
 314:	16 16       	cp	r1, r22
 316:	17 06       	cpc	r1, r23
 318:	18 06       	cpc	r1, r24
 31a:	09 06       	cpc	r0, r25
 31c:	08 95       	ret

0000031e <__fp_pscB>:
 31e:	00 24       	eor	r0, r0
 320:	0a 94       	dec	r0
 322:	12 16       	cp	r1, r18
 324:	13 06       	cpc	r1, r19
 326:	14 06       	cpc	r1, r20
 328:	05 06       	cpc	r0, r21
 32a:	08 95       	ret

0000032c <__fp_round>:
 32c:	09 2e       	mov	r0, r25
 32e:	03 94       	inc	r0
 330:	00 0c       	add	r0, r0
 332:	11 f4       	brne	.+4      	; 0x338 <__fp_round+0xc>
 334:	88 23       	and	r24, r24
 336:	52 f0       	brmi	.+20     	; 0x34c <__fp_round+0x20>
 338:	bb 0f       	add	r27, r27
 33a:	40 f4       	brcc	.+16     	; 0x34c <__fp_round+0x20>
 33c:	bf 2b       	or	r27, r31
 33e:	11 f4       	brne	.+4      	; 0x344 <__fp_round+0x18>
 340:	60 ff       	sbrs	r22, 0
 342:	04 c0       	rjmp	.+8      	; 0x34c <__fp_round+0x20>
 344:	6f 5f       	subi	r22, 0xFF	; 255
 346:	7f 4f       	sbci	r23, 0xFF	; 255
 348:	8f 4f       	sbci	r24, 0xFF	; 255
 34a:	9f 4f       	sbci	r25, 0xFF	; 255
 34c:	08 95       	ret

0000034e <__fp_split3>:
 34e:	57 fd       	sbrc	r21, 7
 350:	90 58       	subi	r25, 0x80	; 128
 352:	44 0f       	add	r20, r20
 354:	55 1f       	adc	r21, r21
 356:	59 f0       	breq	.+22     	; 0x36e <__fp_splitA+0x10>
 358:	5f 3f       	cpi	r21, 0xFF	; 255
 35a:	71 f0       	breq	.+28     	; 0x378 <__fp_splitA+0x1a>
 35c:	47 95       	ror	r20

0000035e <__fp_splitA>:
 35e:	88 0f       	add	r24, r24
 360:	97 fb       	bst	r25, 7
 362:	99 1f       	adc	r25, r25
 364:	61 f0       	breq	.+24     	; 0x37e <__fp_splitA+0x20>
 366:	9f 3f       	cpi	r25, 0xFF	; 255
 368:	79 f0       	breq	.+30     	; 0x388 <__fp_splitA+0x2a>
 36a:	87 95       	ror	r24
 36c:	08 95       	ret
 36e:	12 16       	cp	r1, r18
 370:	13 06       	cpc	r1, r19
 372:	14 06       	cpc	r1, r20
 374:	55 1f       	adc	r21, r21
 376:	f2 cf       	rjmp	.-28     	; 0x35c <__fp_split3+0xe>
 378:	46 95       	lsr	r20
 37a:	f1 df       	rcall	.-30     	; 0x35e <__fp_splitA>
 37c:	08 c0       	rjmp	.+16     	; 0x38e <__fp_splitA+0x30>
 37e:	16 16       	cp	r1, r22
 380:	17 06       	cpc	r1, r23
 382:	18 06       	cpc	r1, r24
 384:	99 1f       	adc	r25, r25
 386:	f1 cf       	rjmp	.-30     	; 0x36a <__fp_splitA+0xc>
 388:	86 95       	lsr	r24
 38a:	71 05       	cpc	r23, r1
 38c:	61 05       	cpc	r22, r1
 38e:	08 94       	sec
 390:	08 95       	ret

00000392 <__fp_zero>:
 392:	e8 94       	clt

00000394 <__fp_szero>:
 394:	bb 27       	eor	r27, r27
 396:	66 27       	eor	r22, r22
 398:	77 27       	eor	r23, r23
 39a:	cb 01       	movw	r24, r22
 39c:	97 f9       	bld	r25, 7
 39e:	08 95       	ret

000003a0 <__mulsf3>:
 3a0:	0b d0       	rcall	.+22     	; 0x3b8 <__mulsf3x>
 3a2:	c4 cf       	rjmp	.-120    	; 0x32c <__fp_round>
 3a4:	b5 df       	rcall	.-150    	; 0x310 <__fp_pscA>
 3a6:	28 f0       	brcs	.+10     	; 0x3b2 <__mulsf3+0x12>
 3a8:	ba df       	rcall	.-140    	; 0x31e <__fp_pscB>
 3aa:	18 f0       	brcs	.+6      	; 0x3b2 <__mulsf3+0x12>
 3ac:	95 23       	and	r25, r21
 3ae:	09 f0       	breq	.+2      	; 0x3b2 <__mulsf3+0x12>
 3b0:	a6 cf       	rjmp	.-180    	; 0x2fe <__fp_inf>
 3b2:	ab cf       	rjmp	.-170    	; 0x30a <__fp_nan>
 3b4:	11 24       	eor	r1, r1
 3b6:	ee cf       	rjmp	.-36     	; 0x394 <__fp_szero>

000003b8 <__mulsf3x>:
 3b8:	ca df       	rcall	.-108    	; 0x34e <__fp_split3>
 3ba:	a0 f3       	brcs	.-24     	; 0x3a4 <__mulsf3+0x4>

000003bc <__mulsf3_pse>:
 3bc:	95 9f       	mul	r25, r21
 3be:	d1 f3       	breq	.-12     	; 0x3b4 <__mulsf3+0x14>
 3c0:	95 0f       	add	r25, r21
 3c2:	50 e0       	ldi	r21, 0x00	; 0
 3c4:	55 1f       	adc	r21, r21
 3c6:	62 9f       	mul	r22, r18
 3c8:	f0 01       	movw	r30, r0
 3ca:	72 9f       	mul	r23, r18
 3cc:	bb 27       	eor	r27, r27
 3ce:	f0 0d       	add	r31, r0
 3d0:	b1 1d       	adc	r27, r1
 3d2:	63 9f       	mul	r22, r19
 3d4:	aa 27       	eor	r26, r26
 3d6:	f0 0d       	add	r31, r0
 3d8:	b1 1d       	adc	r27, r1
 3da:	aa 1f       	adc	r26, r26
 3dc:	64 9f       	mul	r22, r20
 3de:	66 27       	eor	r22, r22
 3e0:	b0 0d       	add	r27, r0
 3e2:	a1 1d       	adc	r26, r1
 3e4:	66 1f       	adc	r22, r22
 3e6:	82 9f       	mul	r24, r18
 3e8:	22 27       	eor	r18, r18
 3ea:	b0 0d       	add	r27, r0
 3ec:	a1 1d       	adc	r26, r1
 3ee:	62 1f       	adc	r22, r18
 3f0:	73 9f       	mul	r23, r19
 3f2:	b0 0d       	add	r27, r0
 3f4:	a1 1d       	adc	r26, r1
 3f6:	62 1f       	adc	r22, r18
 3f8:	83 9f       	mul	r24, r19
 3fa:	a0 0d       	add	r26, r0
 3fc:	61 1d       	adc	r22, r1
 3fe:	22 1f       	adc	r18, r18
 400:	74 9f       	mul	r23, r20
 402:	33 27       	eor	r19, r19
 404:	a0 0d       	add	r26, r0
 406:	61 1d       	adc	r22, r1
 408:	23 1f       	adc	r18, r19
 40a:	84 9f       	mul	r24, r20
 40c:	60 0d       	add	r22, r0
 40e:	21 1d       	adc	r18, r1
 410:	82 2f       	mov	r24, r18
 412:	76 2f       	mov	r23, r22
 414:	6a 2f       	mov	r22, r26
 416:	11 24       	eor	r1, r1
 418:	9f 57       	subi	r25, 0x7F	; 127
 41a:	50 40       	sbci	r21, 0x00	; 0
 41c:	8a f0       	brmi	.+34     	; 0x440 <__mulsf3_pse+0x84>
 41e:	e1 f0       	breq	.+56     	; 0x458 <__mulsf3_pse+0x9c>
 420:	88 23       	and	r24, r24
 422:	4a f0       	brmi	.+18     	; 0x436 <__mulsf3_pse+0x7a>
 424:	ee 0f       	add	r30, r30
 426:	ff 1f       	adc	r31, r31
 428:	bb 1f       	adc	r27, r27
 42a:	66 1f       	adc	r22, r22
 42c:	77 1f       	adc	r23, r23
 42e:	88 1f       	adc	r24, r24
 430:	91 50       	subi	r25, 0x01	; 1
 432:	50 40       	sbci	r21, 0x00	; 0
 434:	a9 f7       	brne	.-22     	; 0x420 <__mulsf3_pse+0x64>
 436:	9e 3f       	cpi	r25, 0xFE	; 254
 438:	51 05       	cpc	r21, r1
 43a:	70 f0       	brcs	.+28     	; 0x458 <__mulsf3_pse+0x9c>
 43c:	60 cf       	rjmp	.-320    	; 0x2fe <__fp_inf>
 43e:	aa cf       	rjmp	.-172    	; 0x394 <__fp_szero>
 440:	5f 3f       	cpi	r21, 0xFF	; 255
 442:	ec f3       	brlt	.-6      	; 0x43e <__mulsf3_pse+0x82>
 444:	98 3e       	cpi	r25, 0xE8	; 232
 446:	dc f3       	brlt	.-10     	; 0x43e <__mulsf3_pse+0x82>
 448:	86 95       	lsr	r24
 44a:	77 95       	ror	r23
 44c:	67 95       	ror	r22
 44e:	b7 95       	ror	r27
 450:	f7 95       	ror	r31
 452:	e7 95       	ror	r30
 454:	9f 5f       	subi	r25, 0xFF	; 255
 456:	c1 f7       	brne	.-16     	; 0x448 <__mulsf3_pse+0x8c>
 458:	fe 2b       	or	r31, r30
 45a:	88 0f       	add	r24, r24
 45c:	91 1d       	adc	r25, r1
 45e:	96 95       	lsr	r25
 460:	87 95       	ror	r24
 462:	97 f9       	bld	r25, 7
 464:	08 95       	ret

00000466 <__divmodhi4>:
 466:	97 fb       	bst	r25, 7
 468:	09 2e       	mov	r0, r25
 46a:	07 26       	eor	r0, r23
 46c:	0a d0       	rcall	.+20     	; 0x482 <__divmodhi4_neg1>
 46e:	77 fd       	sbrc	r23, 7
 470:	04 d0       	rcall	.+8      	; 0x47a <__divmodhi4_neg2>
 472:	0c d0       	rcall	.+24     	; 0x48c <__udivmodhi4>
 474:	06 d0       	rcall	.+12     	; 0x482 <__divmodhi4_neg1>
 476:	00 20       	and	r0, r0
 478:	1a f4       	brpl	.+6      	; 0x480 <__divmodhi4_exit>

0000047a <__divmodhi4_neg2>:
 47a:	70 95       	com	r23
 47c:	61 95       	neg	r22
 47e:	7f 4f       	sbci	r23, 0xFF	; 255

00000480 <__divmodhi4_exit>:
 480:	08 95       	ret

00000482 <__divmodhi4_neg1>:
 482:	f6 f7       	brtc	.-4      	; 0x480 <__divmodhi4_exit>
 484:	90 95       	com	r25
 486:	81 95       	neg	r24
 488:	9f 4f       	sbci	r25, 0xFF	; 255
 48a:	08 95       	ret

0000048c <__udivmodhi4>:
 48c:	aa 1b       	sub	r26, r26
 48e:	bb 1b       	sub	r27, r27
 490:	51 e1       	ldi	r21, 0x11	; 17
 492:	07 c0       	rjmp	.+14     	; 0x4a2 <__udivmodhi4_ep>

00000494 <__udivmodhi4_loop>:
 494:	aa 1f       	adc	r26, r26
 496:	bb 1f       	adc	r27, r27
 498:	a6 17       	cp	r26, r22
 49a:	b7 07       	cpc	r27, r23
 49c:	10 f0       	brcs	.+4      	; 0x4a2 <__udivmodhi4_ep>
 49e:	a6 1b       	sub	r26, r22
 4a0:	b7 0b       	sbc	r27, r23

000004a2 <__udivmodhi4_ep>:
 4a2:	88 1f       	adc	r24, r24
 4a4:	99 1f       	adc	r25, r25
 4a6:	5a 95       	dec	r21
 4a8:	a9 f7       	brne	.-22     	; 0x494 <__udivmodhi4_loop>
 4aa:	80 95       	com	r24
 4ac:	90 95       	com	r25
 4ae:	bc 01       	movw	r22, r24
 4b0:	cd 01       	movw	r24, r26
 4b2:	08 95       	ret

000004b4 <_exit>:
 4b4:	f8 94       	cli

000004b6 <__stop_program>:
 4b6:	ff cf       	rjmp	.-2      	; 0x4b6 <__stop_program>
