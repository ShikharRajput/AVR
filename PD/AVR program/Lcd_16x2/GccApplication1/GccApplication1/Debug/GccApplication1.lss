
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000010c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  0000010c  00000180  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000006cc  00000000  00000000  00000180  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000085  00000000  00000000  0000084c  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000080  00000000  00000000  000008d8  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000004f1  00000000  00000000  00000958  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000118  00000000  00000000  00000e49  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000036e  00000000  00000000  00000f61  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  000012d0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000011d  00000000  00000000  000012f4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec e0       	ldi	r30, 0x0C	; 12
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 36       	cpi	r26, 0x60	; 96
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 84 00 	jmp	0x108	; 0x108 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:
#include <avr/io.h>
#include <util/delay.h>

int main(void)
{
	DDRA=0x07;
  92:	87 e0       	ldi	r24, 0x07	; 7
  94:	8a bb       	out	0x1a, r24	; 26
	DDRB=0xff;
  96:	8f ef       	ldi	r24, 0xFF	; 255
  98:	87 bb       	out	0x17, r24	; 23
	
	PORTB=0x38;
  9a:	88 e3       	ldi	r24, 0x38	; 56
  9c:	88 bb       	out	0x18, r24	; 24
	PORTA=PORTA&~(1<<0);
  9e:	d8 98       	cbi	0x1b, 0	; 27
    PORTA=PORTA&~(1<<1);
  a0:	d9 98       	cbi	0x1b, 1	; 27
	PORTA=PORTA|(1<<2);
  a2:	da 9a       	sbi	0x1b, 2	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  a4:	89 ef       	ldi	r24, 0xF9	; 249
  a6:	90 e0       	ldi	r25, 0x00	; 0
  a8:	01 97       	sbiw	r24, 0x01	; 1
  aa:	f1 f7       	brne	.-4      	; 0xa8 <main+0x16>
  ac:	00 c0       	rjmp	.+0      	; 0xae <main+0x1c>
  ae:	00 00       	nop
	_delay_ms(1);
	PORTA=PORTA&~(1<<2);
  b0:	da 98       	cbi	0x1b, 2	; 27
  b2:	89 ef       	ldi	r24, 0xF9	; 249
  b4:	90 e0       	ldi	r25, 0x00	; 0
  b6:	01 97       	sbiw	r24, 0x01	; 1
  b8:	f1 f7       	brne	.-4      	; 0xb6 <main+0x24>
  ba:	00 c0       	rjmp	.+0      	; 0xbc <main+0x2a>
  bc:	00 00       	nop
	_delay_ms(1);
	
	PORTB=0x0e;
  be:	8e e0       	ldi	r24, 0x0E	; 14
  c0:	88 bb       	out	0x18, r24	; 24
	PORTA=PORTA&~(1<<0);
  c2:	d8 98       	cbi	0x1b, 0	; 27
    PORTA=PORTA&~(1<<1);
  c4:	d9 98       	cbi	0x1b, 1	; 27
	PORTA=PORTA|(1<<2);
  c6:	da 9a       	sbi	0x1b, 2	; 27
  c8:	89 ef       	ldi	r24, 0xF9	; 249
  ca:	90 e0       	ldi	r25, 0x00	; 0
  cc:	01 97       	sbiw	r24, 0x01	; 1
  ce:	f1 f7       	brne	.-4      	; 0xcc <main+0x3a>
  d0:	00 c0       	rjmp	.+0      	; 0xd2 <main+0x40>
  d2:	00 00       	nop
	_delay_ms(1);
	PORTA=PORTA&~(1<<2);
  d4:	da 98       	cbi	0x1b, 2	; 27
  d6:	89 ef       	ldi	r24, 0xF9	; 249
  d8:	90 e0       	ldi	r25, 0x00	; 0
  da:	01 97       	sbiw	r24, 0x01	; 1
  dc:	f1 f7       	brne	.-4      	; 0xda <main+0x48>
  de:	00 c0       	rjmp	.+0      	; 0xe0 <main+0x4e>
  e0:	00 00       	nop
	_delay_ms(1);
	
	PORTB=66;
  e2:	82 e4       	ldi	r24, 0x42	; 66
  e4:	88 bb       	out	0x18, r24	; 24
	PORTA=PORTA|(1<<0);
  e6:	d8 9a       	sbi	0x1b, 0	; 27
	PORTA=PORTA&~(1<<1);
  e8:	d9 98       	cbi	0x1b, 1	; 27
	PORTA=PORTA|(1<<2);
  ea:	da 9a       	sbi	0x1b, 2	; 27
  ec:	89 ef       	ldi	r24, 0xF9	; 249
  ee:	90 e0       	ldi	r25, 0x00	; 0
  f0:	01 97       	sbiw	r24, 0x01	; 1
  f2:	f1 f7       	brne	.-4      	; 0xf0 <main+0x5e>
  f4:	00 c0       	rjmp	.+0      	; 0xf6 <main+0x64>
  f6:	00 00       	nop
	_delay_ms(1);
	PORTA=PORTA&~(1<<2);
  f8:	da 98       	cbi	0x1b, 2	; 27
  fa:	89 ef       	ldi	r24, 0xF9	; 249
  fc:	90 e0       	ldi	r25, 0x00	; 0
  fe:	01 97       	sbiw	r24, 0x01	; 1
 100:	f1 f7       	brne	.-4      	; 0xfe <main+0x6c>
 102:	00 c0       	rjmp	.+0      	; 0x104 <main+0x72>
 104:	00 00       	nop
 106:	ff cf       	rjmp	.-2      	; 0x106 <main+0x74>

00000108 <_exit>:
 108:	f8 94       	cli

0000010a <__stop_program>:
 10a:	ff cf       	rjmp	.-2      	; 0x10a <__stop_program>
