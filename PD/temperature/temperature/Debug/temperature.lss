
temperature.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000059e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000e  00800060  0000059e  00000632  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000008  0080006e  0080006e  00000640  2**0
                  ALLOC
  3 .stab         00001c38  00000000  00000000  00000640  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000005e5  00000000  00000000  00002278  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000000c0  00000000  00000000  00002860  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000844  00000000  00000000  00002920  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000229  00000000  00000000  00003164  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004ec  00000000  00000000  0000338d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000d0  00000000  00000000  0000387c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000015b  00000000  00000000  0000394c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000001af  00000000  00000000  00003aa7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ee e9       	ldi	r30, 0x9E	; 158
  68:	f5 e0       	ldi	r31, 0x05	; 5
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	ae 36       	cpi	r26, 0x6E	; 110
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	ae e6       	ldi	r26, 0x6E	; 110
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a6 37       	cpi	r26, 0x76	; 118
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <main>
  8a:	0c 94 cd 02 	jmp	0x59a	; 0x59a <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <lcd_cmd_enable>:
	}
}
	
void lcd_cmd_enable(char x)                  //to activate command register i.e to use data pins(7-14) as command pins
{
	PORTB  = x;
  92:	88 bb       	out	0x18, r24	; 24
	PORTD = PORTD &~ (1<<0);
  94:	90 98       	cbi	0x12, 0	; 18
	PORTD = PORTD &~ (1<<1);
  96:	91 98       	cbi	0x12, 1	; 18
	PORTD = PORTD | 1<<2;
  98:	92 9a       	sbi	0x12, 2	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  9a:	8f ec       	ldi	r24, 0xCF	; 207
  9c:	97 e0       	ldi	r25, 0x07	; 7
  9e:	01 97       	sbiw	r24, 0x01	; 1
  a0:	f1 f7       	brne	.-4      	; 0x9e <lcd_cmd_enable+0xc>
  a2:	00 c0       	rjmp	.+0      	; 0xa4 <lcd_cmd_enable+0x12>
  a4:	00 00       	nop
	_delay_ms(1);
	PORTD = PORTD &~ (1<<2);
  a6:	92 98       	cbi	0x12, 2	; 18
  a8:	8f ec       	ldi	r24, 0xCF	; 207
  aa:	97 e0       	ldi	r25, 0x07	; 7
  ac:	01 97       	sbiw	r24, 0x01	; 1
  ae:	f1 f7       	brne	.-4      	; 0xac <lcd_cmd_enable+0x1a>
  b0:	00 c0       	rjmp	.+0      	; 0xb2 <lcd_cmd_enable+0x20>
  b2:	00 00       	nop
	_delay_ms(1);

}
  b4:	08 95       	ret

000000b6 <lcd_data_enable>:
void lcd_data_enable(char y)                 //to activate data register
{
	PORTB = y;
  b6:	88 bb       	out	0x18, r24	; 24
	PORTD = PORTD | (1<<0);
  b8:	90 9a       	sbi	0x12, 0	; 18
	PORTD = PORTD &~ (1<<1);
  ba:	91 98       	cbi	0x12, 1	; 18
	PORTD = PORTD | 1<<2;
  bc:	92 9a       	sbi	0x12, 2	; 18
  be:	8f ec       	ldi	r24, 0xCF	; 207
  c0:	97 e0       	ldi	r25, 0x07	; 7
  c2:	01 97       	sbiw	r24, 0x01	; 1
  c4:	f1 f7       	brne	.-4      	; 0xc2 <lcd_data_enable+0xc>
  c6:	00 c0       	rjmp	.+0      	; 0xc8 <lcd_data_enable+0x12>
  c8:	00 00       	nop
	_delay_ms(1);
	PORTD = PORTD &~ (1<<2);
  ca:	92 98       	cbi	0x12, 2	; 18
  cc:	8f ec       	ldi	r24, 0xCF	; 207
  ce:	97 e0       	ldi	r25, 0x07	; 7
  d0:	01 97       	sbiw	r24, 0x01	; 1
  d2:	f1 f7       	brne	.-4      	; 0xd0 <lcd_data_enable+0x1a>
  d4:	00 c0       	rjmp	.+0      	; 0xd6 <lcd_data_enable+0x20>
  d6:	00 00       	nop
	_delay_ms(1);
	
}
  d8:	08 95       	ret

000000da <voltage>:
#include <util/delay.h>

float y,V;
float voltage(float a)
{       float v;
		v= ((5*a)/1023)*100;
  da:	20 e0       	ldi	r18, 0x00	; 0
  dc:	30 e0       	ldi	r19, 0x00	; 0
  de:	40 ea       	ldi	r20, 0xA0	; 160
  e0:	50 e4       	ldi	r21, 0x40	; 64
  e2:	0e 94 43 02 	call	0x486	; 0x486 <__mulsf3>
  e6:	20 e0       	ldi	r18, 0x00	; 0
  e8:	30 ec       	ldi	r19, 0xC0	; 192
  ea:	4f e7       	ldi	r20, 0x7F	; 127
  ec:	54 e4       	ldi	r21, 0x44	; 68
  ee:	0e 94 1c 01 	call	0x238	; 0x238 <__divsf3>
  f2:	20 e0       	ldi	r18, 0x00	; 0
  f4:	30 e0       	ldi	r19, 0x00	; 0
  f6:	48 ec       	ldi	r20, 0xC8	; 200
  f8:	52 e4       	ldi	r21, 0x42	; 66
  fa:	0e 94 43 02 	call	0x486	; 0x486 <__mulsf3>
		return v;
}
  fe:	46 2f       	mov	r20, r22
 100:	57 2f       	mov	r21, r23
 102:	68 2f       	mov	r22, r24
 104:	79 2f       	mov	r23, r25
 106:	cb 01       	movw	r24, r22
 108:	ba 01       	movw	r22, r20
 10a:	08 95       	ret

0000010c <ascii_conversion>:

void ascii_conversion(int a)
{
 10c:	ef 92       	push	r14
 10e:	ff 92       	push	r15
 110:	0f 93       	push	r16
 112:	1f 93       	push	r17
 114:	cf 93       	push	r28
 116:	df 93       	push	r29
 118:	8c 01       	movw	r16, r24
 11a:	c3 ec       	ldi	r28, 0xC3	; 195
 11c:	d0 e0       	ldi	r29, 0x00	; 0
	char pos = 0xc3;
	int i, a1;
	for (i=0; i<4; i++)
	{
		lcd_cmd_enable(pos);
		a1= a%10;
 11e:	0f 2e       	mov	r0, r31
 120:	fa e0       	ldi	r31, 0x0A	; 10
 122:	ef 2e       	mov	r14, r31
 124:	ff 24       	eor	r15, r15
 126:	f0 2d       	mov	r31, r0
{
	char pos = 0xc3;
	int i, a1;
	for (i=0; i<4; i++)
	{
		lcd_cmd_enable(pos);
 128:	ce 01       	movw	r24, r28
 12a:	0e 94 49 00 	call	0x92	; 0x92 <lcd_cmd_enable>
		a1= a%10;
		a = a/10;
 12e:	c8 01       	movw	r24, r16
 130:	b7 01       	movw	r22, r14
 132:	0e 94 a6 02 	call	0x54c	; 0x54c <__divmodhi4>
 136:	8b 01       	movw	r16, r22
		lcd_data_enable(a1+48);                //asci value of zero is 48
 138:	c0 96       	adiw	r24, 0x30	; 48
 13a:	0e 94 5b 00 	call	0xb6	; 0xb6 <lcd_data_enable>
 13e:	21 97       	sbiw	r28, 0x01	; 1

void ascii_conversion(int a)
{
	char pos = 0xc3;
	int i, a1;
	for (i=0; i<4; i++)
 140:	cf 3b       	cpi	r28, 0xBF	; 191
 142:	d1 05       	cpc	r29, r1
 144:	89 f7       	brne	.-30     	; 0x128 <ascii_conversion+0x1c>
		a = a/10;
		lcd_data_enable(a1+48);                //asci value of zero is 48
		pos--;
		
	}
}
 146:	df 91       	pop	r29
 148:	cf 91       	pop	r28
 14a:	1f 91       	pop	r17
 14c:	0f 91       	pop	r16
 14e:	ff 90       	pop	r15
 150:	ef 90       	pop	r14
 152:	08 95       	ret

00000154 <lcd_string>:

void lcd_string(char *x)
{
 154:	cf 93       	push	r28
 156:	df 93       	push	r29
 158:	ec 01       	movw	r28, r24
	while(*x)
 15a:	88 81       	ld	r24, Y
 15c:	88 23       	and	r24, r24
 15e:	81 f0       	breq	.+32     	; 0x180 <lcd_string+0x2c>
		pos--;
		
	}
}

void lcd_string(char *x)
 160:	21 96       	adiw	r28, 0x01	; 1
{
	while(*x)
	{
		lcd_data_enable(*x);
 162:	90 e0       	ldi	r25, 0x00	; 0
 164:	0e 94 5b 00 	call	0xb6	; 0xb6 <lcd_data_enable>
 168:	8f ef       	ldi	r24, 0xFF	; 255
 16a:	90 e7       	ldi	r25, 0x70	; 112
 16c:	a2 e0       	ldi	r26, 0x02	; 2
 16e:	81 50       	subi	r24, 0x01	; 1
 170:	90 40       	sbci	r25, 0x00	; 0
 172:	a0 40       	sbci	r26, 0x00	; 0
 174:	e1 f7       	brne	.-8      	; 0x16e <lcd_string+0x1a>
 176:	00 c0       	rjmp	.+0      	; 0x178 <lcd_string+0x24>
 178:	00 00       	nop
	}
}

void lcd_string(char *x)
{
	while(*x)
 17a:	89 91       	ld	r24, Y+
 17c:	88 23       	and	r24, r24
 17e:	89 f7       	brne	.-30     	; 0x162 <lcd_string+0xe>
	{
		lcd_data_enable(*x);
		x++;
		_delay_ms(100);
	}
}
 180:	df 91       	pop	r29
 182:	cf 91       	pop	r28
 184:	08 95       	ret

00000186 <adc_init>:
}

void adc_init()
{
	
	ADMUX = 0x40;
 186:	80 e4       	ldi	r24, 0x40	; 64
 188:	87 b9       	out	0x07, r24	; 7
	ADCSRA = ADCSRA | 1<< ADEN | 1<< ADATE | 1<< ADPS0 | 1<<ADPS1 | 1<< ADPS2;
 18a:	86 b1       	in	r24, 0x06	; 6
 18c:	87 6a       	ori	r24, 0xA7	; 167
 18e:	86 b9       	out	0x06, r24	; 6
	
}
 190:	08 95       	ret

00000192 <conversion>:

int conversion()
{
	ADCSRA = ADCSRA | 1<<ADSC ;
 192:	36 9a       	sbi	0x06, 6	; 6
	while((ADCSRA&(1<<ADIF))==0){}
 194:	34 9b       	sbis	0x06, 4	; 6
 196:	fe cf       	rjmp	.-4      	; 0x194 <conversion+0x2>
	return ADC;
 198:	84 b1       	in	r24, 0x04	; 4
 19a:	95 b1       	in	r25, 0x05	; 5
	//PORTD = (ADCH&(1<<0)&(1<<1));
}
 19c:	08 95       	ret

0000019e <lcd_init>:

void lcd_init()
{
	lcd_cmd_enable(0x38);                   /* Initialization of 16X2 LCD in 8bit mode */
 19e:	88 e3       	ldi	r24, 0x38	; 56
 1a0:	0e 94 49 00 	call	0x92	; 0x92 <lcd_cmd_enable>
	
	lcd_cmd_enable(0x0e);                    /* Display ON Cursor OFF */
 1a4:	8e e0       	ldi	r24, 0x0E	; 14
 1a6:	0e 94 49 00 	call	0x92	; 0x92 <lcd_cmd_enable>

	lcd_cmd_enable(0x06);                     /* Auto Increment cursor */
 1aa:	86 e0       	ldi	r24, 0x06	; 6
 1ac:	0e 94 49 00 	call	0x92	; 0x92 <lcd_cmd_enable>
	
}
 1b0:	08 95       	ret

000001b2 <main>:

int main(void)
{
	float a;
	float t;
	DDRA = 0x00;
 1b2:	1a ba       	out	0x1a, r1	; 26
	DDRD = 0x07;
 1b4:	87 e0       	ldi	r24, 0x07	; 7
 1b6:	81 bb       	out	0x11, r24	; 17
	DDRB = 0xff;
 1b8:	8f ef       	ldi	r24, 0xFF	; 255
 1ba:	87 bb       	out	0x17, r24	; 23
	
	lcd_init();
 1bc:	0e 94 cf 00 	call	0x19e	; 0x19e <lcd_init>
	adc_init();
 1c0:	0e 94 c3 00 	call	0x186	; 0x186 <adc_init>
	lcd_cmd_enable(0x10);                         /* clear display */
 1c4:	80 e1       	ldi	r24, 0x10	; 16
 1c6:	0e 94 49 00 	call	0x92	; 0x92 <lcd_cmd_enable>
	
	lcd_cmd_enable(0x80);                          /* cursor at home position */
 1ca:	80 e8       	ldi	r24, 0x80	; 128
 1cc:	0e 94 49 00 	call	0x92	; 0x92 <lcd_cmd_enable>
	lcd_string("TEMPERATURE");
 1d0:	80 e6       	ldi	r24, 0x60	; 96
 1d2:	90 e0       	ldi	r25, 0x00	; 0
 1d4:	0e 94 aa 00 	call	0x154	; 0x154 <lcd_string>
	lcd_cmd_enable(0xc4);
 1d8:	84 ec       	ldi	r24, 0xC4	; 196
 1da:	0e 94 49 00 	call	0x92	; 0x92 <lcd_cmd_enable>
	lcd_data_enable(0xdf);
 1de:	8f ed       	ldi	r24, 0xDF	; 223
 1e0:	0e 94 5b 00 	call	0xb6	; 0xb6 <lcd_data_enable>
	lcd_cmd_enable(0xc5);
 1e4:	85 ec       	ldi	r24, 0xC5	; 197
 1e6:	0e 94 49 00 	call	0x92	; 0x92 <lcd_cmd_enable>
	lcd_string("C");
 1ea:	8c e6       	ldi	r24, 0x6C	; 108
 1ec:	90 e0       	ldi	r25, 0x00	; 0
 1ee:	0e 94 aa 00 	call	0x154	; 0x154 <lcd_string>
		//ADCSRA=ADCSRA|1<<ADSC;
		//while((ADCSRA&(1<<ADIF))==0){}
		//a=ADC;
		//t=((a*5)/1023)*100;
		//ascii_conversion(t);
		y= conversion();
 1f2:	0e 94 c9 00 	call	0x192	; 0x192 <conversion>
 1f6:	9c 01       	movw	r18, r24
 1f8:	b9 01       	movw	r22, r18
 1fa:	88 27       	eor	r24, r24
 1fc:	77 fd       	sbrc	r23, 7
 1fe:	80 95       	com	r24
 200:	98 2f       	mov	r25, r24
 202:	0e 94 b7 01 	call	0x36e	; 0x36e <__floatsisf>
 206:	60 93 72 00 	sts	0x0072, r22
 20a:	70 93 73 00 	sts	0x0073, r23
 20e:	80 93 74 00 	sts	0x0074, r24
 212:	90 93 75 00 	sts	0x0075, r25
		V =voltage(y);
 216:	0e 94 6d 00 	call	0xda	; 0xda <voltage>
 21a:	60 93 6e 00 	sts	0x006E, r22
 21e:	70 93 6f 00 	sts	0x006F, r23
 222:	80 93 70 00 	sts	0x0070, r24
 226:	90 93 71 00 	sts	0x0071, r25
		ascii_conversion(V);
 22a:	0e 94 84 01 	call	0x308	; 0x308 <__fixsfsi>
 22e:	dc 01       	movw	r26, r24
 230:	cb 01       	movw	r24, r22
 232:	0e 94 86 00 	call	0x10c	; 0x10c <ascii_conversion>
 236:	dd cf       	rjmp	.-70     	; 0x1f2 <main+0x40>

00000238 <__divsf3>:
 238:	0c d0       	rcall	.+24     	; 0x252 <__divsf3x>
 23a:	eb c0       	rjmp	.+470    	; 0x412 <__fp_round>
 23c:	e3 d0       	rcall	.+454    	; 0x404 <__fp_pscB>
 23e:	40 f0       	brcs	.+16     	; 0x250 <__divsf3+0x18>
 240:	da d0       	rcall	.+436    	; 0x3f6 <__fp_pscA>
 242:	30 f0       	brcs	.+12     	; 0x250 <__divsf3+0x18>
 244:	21 f4       	brne	.+8      	; 0x24e <__divsf3+0x16>
 246:	5f 3f       	cpi	r21, 0xFF	; 255
 248:	19 f0       	breq	.+6      	; 0x250 <__divsf3+0x18>
 24a:	cc c0       	rjmp	.+408    	; 0x3e4 <__fp_inf>
 24c:	51 11       	cpse	r21, r1
 24e:	15 c1       	rjmp	.+554    	; 0x47a <__fp_szero>
 250:	cf c0       	rjmp	.+414    	; 0x3f0 <__fp_nan>

00000252 <__divsf3x>:
 252:	f0 d0       	rcall	.+480    	; 0x434 <__fp_split3>
 254:	98 f3       	brcs	.-26     	; 0x23c <__divsf3+0x4>

00000256 <__divsf3_pse>:
 256:	99 23       	and	r25, r25
 258:	c9 f3       	breq	.-14     	; 0x24c <__divsf3+0x14>
 25a:	55 23       	and	r21, r21
 25c:	b1 f3       	breq	.-20     	; 0x24a <__divsf3+0x12>
 25e:	95 1b       	sub	r25, r21
 260:	55 0b       	sbc	r21, r21
 262:	bb 27       	eor	r27, r27
 264:	aa 27       	eor	r26, r26
 266:	62 17       	cp	r22, r18
 268:	73 07       	cpc	r23, r19
 26a:	84 07       	cpc	r24, r20
 26c:	38 f0       	brcs	.+14     	; 0x27c <__divsf3_pse+0x26>
 26e:	9f 5f       	subi	r25, 0xFF	; 255
 270:	5f 4f       	sbci	r21, 0xFF	; 255
 272:	22 0f       	add	r18, r18
 274:	33 1f       	adc	r19, r19
 276:	44 1f       	adc	r20, r20
 278:	aa 1f       	adc	r26, r26
 27a:	a9 f3       	breq	.-22     	; 0x266 <__divsf3_pse+0x10>
 27c:	33 d0       	rcall	.+102    	; 0x2e4 <__divsf3_pse+0x8e>
 27e:	0e 2e       	mov	r0, r30
 280:	3a f0       	brmi	.+14     	; 0x290 <__divsf3_pse+0x3a>
 282:	e0 e8       	ldi	r30, 0x80	; 128
 284:	30 d0       	rcall	.+96     	; 0x2e6 <__divsf3_pse+0x90>
 286:	91 50       	subi	r25, 0x01	; 1
 288:	50 40       	sbci	r21, 0x00	; 0
 28a:	e6 95       	lsr	r30
 28c:	00 1c       	adc	r0, r0
 28e:	ca f7       	brpl	.-14     	; 0x282 <__divsf3_pse+0x2c>
 290:	29 d0       	rcall	.+82     	; 0x2e4 <__divsf3_pse+0x8e>
 292:	fe 2f       	mov	r31, r30
 294:	27 d0       	rcall	.+78     	; 0x2e4 <__divsf3_pse+0x8e>
 296:	66 0f       	add	r22, r22
 298:	77 1f       	adc	r23, r23
 29a:	88 1f       	adc	r24, r24
 29c:	bb 1f       	adc	r27, r27
 29e:	26 17       	cp	r18, r22
 2a0:	37 07       	cpc	r19, r23
 2a2:	48 07       	cpc	r20, r24
 2a4:	ab 07       	cpc	r26, r27
 2a6:	b0 e8       	ldi	r27, 0x80	; 128
 2a8:	09 f0       	breq	.+2      	; 0x2ac <__divsf3_pse+0x56>
 2aa:	bb 0b       	sbc	r27, r27
 2ac:	80 2d       	mov	r24, r0
 2ae:	bf 01       	movw	r22, r30
 2b0:	ff 27       	eor	r31, r31
 2b2:	93 58       	subi	r25, 0x83	; 131
 2b4:	5f 4f       	sbci	r21, 0xFF	; 255
 2b6:	2a f0       	brmi	.+10     	; 0x2c2 <__divsf3_pse+0x6c>
 2b8:	9e 3f       	cpi	r25, 0xFE	; 254
 2ba:	51 05       	cpc	r21, r1
 2bc:	68 f0       	brcs	.+26     	; 0x2d8 <__divsf3_pse+0x82>
 2be:	92 c0       	rjmp	.+292    	; 0x3e4 <__fp_inf>
 2c0:	dc c0       	rjmp	.+440    	; 0x47a <__fp_szero>
 2c2:	5f 3f       	cpi	r21, 0xFF	; 255
 2c4:	ec f3       	brlt	.-6      	; 0x2c0 <__divsf3_pse+0x6a>
 2c6:	98 3e       	cpi	r25, 0xE8	; 232
 2c8:	dc f3       	brlt	.-10     	; 0x2c0 <__divsf3_pse+0x6a>
 2ca:	86 95       	lsr	r24
 2cc:	77 95       	ror	r23
 2ce:	67 95       	ror	r22
 2d0:	b7 95       	ror	r27
 2d2:	f7 95       	ror	r31
 2d4:	9f 5f       	subi	r25, 0xFF	; 255
 2d6:	c9 f7       	brne	.-14     	; 0x2ca <__divsf3_pse+0x74>
 2d8:	88 0f       	add	r24, r24
 2da:	91 1d       	adc	r25, r1
 2dc:	96 95       	lsr	r25
 2de:	87 95       	ror	r24
 2e0:	97 f9       	bld	r25, 7
 2e2:	08 95       	ret
 2e4:	e1 e0       	ldi	r30, 0x01	; 1
 2e6:	66 0f       	add	r22, r22
 2e8:	77 1f       	adc	r23, r23
 2ea:	88 1f       	adc	r24, r24
 2ec:	bb 1f       	adc	r27, r27
 2ee:	62 17       	cp	r22, r18
 2f0:	73 07       	cpc	r23, r19
 2f2:	84 07       	cpc	r24, r20
 2f4:	ba 07       	cpc	r27, r26
 2f6:	20 f0       	brcs	.+8      	; 0x300 <__divsf3_pse+0xaa>
 2f8:	62 1b       	sub	r22, r18
 2fa:	73 0b       	sbc	r23, r19
 2fc:	84 0b       	sbc	r24, r20
 2fe:	ba 0b       	sbc	r27, r26
 300:	ee 1f       	adc	r30, r30
 302:	88 f7       	brcc	.-30     	; 0x2e6 <__divsf3_pse+0x90>
 304:	e0 95       	com	r30
 306:	08 95       	ret

00000308 <__fixsfsi>:
 308:	04 d0       	rcall	.+8      	; 0x312 <__fixunssfsi>
 30a:	68 94       	set
 30c:	b1 11       	cpse	r27, r1
 30e:	b5 c0       	rjmp	.+362    	; 0x47a <__fp_szero>
 310:	08 95       	ret

00000312 <__fixunssfsi>:
 312:	98 d0       	rcall	.+304    	; 0x444 <__fp_splitA>
 314:	88 f0       	brcs	.+34     	; 0x338 <__fixunssfsi+0x26>
 316:	9f 57       	subi	r25, 0x7F	; 127
 318:	90 f0       	brcs	.+36     	; 0x33e <__fixunssfsi+0x2c>
 31a:	b9 2f       	mov	r27, r25
 31c:	99 27       	eor	r25, r25
 31e:	b7 51       	subi	r27, 0x17	; 23
 320:	a0 f0       	brcs	.+40     	; 0x34a <__fixunssfsi+0x38>
 322:	d1 f0       	breq	.+52     	; 0x358 <__fixunssfsi+0x46>
 324:	66 0f       	add	r22, r22
 326:	77 1f       	adc	r23, r23
 328:	88 1f       	adc	r24, r24
 32a:	99 1f       	adc	r25, r25
 32c:	1a f0       	brmi	.+6      	; 0x334 <__fixunssfsi+0x22>
 32e:	ba 95       	dec	r27
 330:	c9 f7       	brne	.-14     	; 0x324 <__fixunssfsi+0x12>
 332:	12 c0       	rjmp	.+36     	; 0x358 <__fixunssfsi+0x46>
 334:	b1 30       	cpi	r27, 0x01	; 1
 336:	81 f0       	breq	.+32     	; 0x358 <__fixunssfsi+0x46>
 338:	9f d0       	rcall	.+318    	; 0x478 <__fp_zero>
 33a:	b1 e0       	ldi	r27, 0x01	; 1
 33c:	08 95       	ret
 33e:	9c c0       	rjmp	.+312    	; 0x478 <__fp_zero>
 340:	67 2f       	mov	r22, r23
 342:	78 2f       	mov	r23, r24
 344:	88 27       	eor	r24, r24
 346:	b8 5f       	subi	r27, 0xF8	; 248
 348:	39 f0       	breq	.+14     	; 0x358 <__fixunssfsi+0x46>
 34a:	b9 3f       	cpi	r27, 0xF9	; 249
 34c:	cc f3       	brlt	.-14     	; 0x340 <__fixunssfsi+0x2e>
 34e:	86 95       	lsr	r24
 350:	77 95       	ror	r23
 352:	67 95       	ror	r22
 354:	b3 95       	inc	r27
 356:	d9 f7       	brne	.-10     	; 0x34e <__fixunssfsi+0x3c>
 358:	3e f4       	brtc	.+14     	; 0x368 <__fixunssfsi+0x56>
 35a:	90 95       	com	r25
 35c:	80 95       	com	r24
 35e:	70 95       	com	r23
 360:	61 95       	neg	r22
 362:	7f 4f       	sbci	r23, 0xFF	; 255
 364:	8f 4f       	sbci	r24, 0xFF	; 255
 366:	9f 4f       	sbci	r25, 0xFF	; 255
 368:	08 95       	ret

0000036a <__floatunsisf>:
 36a:	e8 94       	clt
 36c:	09 c0       	rjmp	.+18     	; 0x380 <__floatsisf+0x12>

0000036e <__floatsisf>:
 36e:	97 fb       	bst	r25, 7
 370:	3e f4       	brtc	.+14     	; 0x380 <__floatsisf+0x12>
 372:	90 95       	com	r25
 374:	80 95       	com	r24
 376:	70 95       	com	r23
 378:	61 95       	neg	r22
 37a:	7f 4f       	sbci	r23, 0xFF	; 255
 37c:	8f 4f       	sbci	r24, 0xFF	; 255
 37e:	9f 4f       	sbci	r25, 0xFF	; 255
 380:	99 23       	and	r25, r25
 382:	a9 f0       	breq	.+42     	; 0x3ae <__floatsisf+0x40>
 384:	f9 2f       	mov	r31, r25
 386:	96 e9       	ldi	r25, 0x96	; 150
 388:	bb 27       	eor	r27, r27
 38a:	93 95       	inc	r25
 38c:	f6 95       	lsr	r31
 38e:	87 95       	ror	r24
 390:	77 95       	ror	r23
 392:	67 95       	ror	r22
 394:	b7 95       	ror	r27
 396:	f1 11       	cpse	r31, r1
 398:	f8 cf       	rjmp	.-16     	; 0x38a <__floatsisf+0x1c>
 39a:	fa f4       	brpl	.+62     	; 0x3da <__floatsisf+0x6c>
 39c:	bb 0f       	add	r27, r27
 39e:	11 f4       	brne	.+4      	; 0x3a4 <__floatsisf+0x36>
 3a0:	60 ff       	sbrs	r22, 0
 3a2:	1b c0       	rjmp	.+54     	; 0x3da <__floatsisf+0x6c>
 3a4:	6f 5f       	subi	r22, 0xFF	; 255
 3a6:	7f 4f       	sbci	r23, 0xFF	; 255
 3a8:	8f 4f       	sbci	r24, 0xFF	; 255
 3aa:	9f 4f       	sbci	r25, 0xFF	; 255
 3ac:	16 c0       	rjmp	.+44     	; 0x3da <__floatsisf+0x6c>
 3ae:	88 23       	and	r24, r24
 3b0:	11 f0       	breq	.+4      	; 0x3b6 <__floatsisf+0x48>
 3b2:	96 e9       	ldi	r25, 0x96	; 150
 3b4:	11 c0       	rjmp	.+34     	; 0x3d8 <__floatsisf+0x6a>
 3b6:	77 23       	and	r23, r23
 3b8:	21 f0       	breq	.+8      	; 0x3c2 <__floatsisf+0x54>
 3ba:	9e e8       	ldi	r25, 0x8E	; 142
 3bc:	87 2f       	mov	r24, r23
 3be:	76 2f       	mov	r23, r22
 3c0:	05 c0       	rjmp	.+10     	; 0x3cc <__floatsisf+0x5e>
 3c2:	66 23       	and	r22, r22
 3c4:	71 f0       	breq	.+28     	; 0x3e2 <__floatsisf+0x74>
 3c6:	96 e8       	ldi	r25, 0x86	; 134
 3c8:	86 2f       	mov	r24, r22
 3ca:	70 e0       	ldi	r23, 0x00	; 0
 3cc:	60 e0       	ldi	r22, 0x00	; 0
 3ce:	2a f0       	brmi	.+10     	; 0x3da <__floatsisf+0x6c>
 3d0:	9a 95       	dec	r25
 3d2:	66 0f       	add	r22, r22
 3d4:	77 1f       	adc	r23, r23
 3d6:	88 1f       	adc	r24, r24
 3d8:	da f7       	brpl	.-10     	; 0x3d0 <__floatsisf+0x62>
 3da:	88 0f       	add	r24, r24
 3dc:	96 95       	lsr	r25
 3de:	87 95       	ror	r24
 3e0:	97 f9       	bld	r25, 7
 3e2:	08 95       	ret

000003e4 <__fp_inf>:
 3e4:	97 f9       	bld	r25, 7
 3e6:	9f 67       	ori	r25, 0x7F	; 127
 3e8:	80 e8       	ldi	r24, 0x80	; 128
 3ea:	70 e0       	ldi	r23, 0x00	; 0
 3ec:	60 e0       	ldi	r22, 0x00	; 0
 3ee:	08 95       	ret

000003f0 <__fp_nan>:
 3f0:	9f ef       	ldi	r25, 0xFF	; 255
 3f2:	80 ec       	ldi	r24, 0xC0	; 192
 3f4:	08 95       	ret

000003f6 <__fp_pscA>:
 3f6:	00 24       	eor	r0, r0
 3f8:	0a 94       	dec	r0
 3fa:	16 16       	cp	r1, r22
 3fc:	17 06       	cpc	r1, r23
 3fe:	18 06       	cpc	r1, r24
 400:	09 06       	cpc	r0, r25
 402:	08 95       	ret

00000404 <__fp_pscB>:
 404:	00 24       	eor	r0, r0
 406:	0a 94       	dec	r0
 408:	12 16       	cp	r1, r18
 40a:	13 06       	cpc	r1, r19
 40c:	14 06       	cpc	r1, r20
 40e:	05 06       	cpc	r0, r21
 410:	08 95       	ret

00000412 <__fp_round>:
 412:	09 2e       	mov	r0, r25
 414:	03 94       	inc	r0
 416:	00 0c       	add	r0, r0
 418:	11 f4       	brne	.+4      	; 0x41e <__fp_round+0xc>
 41a:	88 23       	and	r24, r24
 41c:	52 f0       	brmi	.+20     	; 0x432 <__fp_round+0x20>
 41e:	bb 0f       	add	r27, r27
 420:	40 f4       	brcc	.+16     	; 0x432 <__fp_round+0x20>
 422:	bf 2b       	or	r27, r31
 424:	11 f4       	brne	.+4      	; 0x42a <__fp_round+0x18>
 426:	60 ff       	sbrs	r22, 0
 428:	04 c0       	rjmp	.+8      	; 0x432 <__fp_round+0x20>
 42a:	6f 5f       	subi	r22, 0xFF	; 255
 42c:	7f 4f       	sbci	r23, 0xFF	; 255
 42e:	8f 4f       	sbci	r24, 0xFF	; 255
 430:	9f 4f       	sbci	r25, 0xFF	; 255
 432:	08 95       	ret

00000434 <__fp_split3>:
 434:	57 fd       	sbrc	r21, 7
 436:	90 58       	subi	r25, 0x80	; 128
 438:	44 0f       	add	r20, r20
 43a:	55 1f       	adc	r21, r21
 43c:	59 f0       	breq	.+22     	; 0x454 <__fp_splitA+0x10>
 43e:	5f 3f       	cpi	r21, 0xFF	; 255
 440:	71 f0       	breq	.+28     	; 0x45e <__fp_splitA+0x1a>
 442:	47 95       	ror	r20

00000444 <__fp_splitA>:
 444:	88 0f       	add	r24, r24
 446:	97 fb       	bst	r25, 7
 448:	99 1f       	adc	r25, r25
 44a:	61 f0       	breq	.+24     	; 0x464 <__stack+0x5>
 44c:	9f 3f       	cpi	r25, 0xFF	; 255
 44e:	79 f0       	breq	.+30     	; 0x46e <__stack+0xf>
 450:	87 95       	ror	r24
 452:	08 95       	ret
 454:	12 16       	cp	r1, r18
 456:	13 06       	cpc	r1, r19
 458:	14 06       	cpc	r1, r20
 45a:	55 1f       	adc	r21, r21
 45c:	f2 cf       	rjmp	.-28     	; 0x442 <__fp_split3+0xe>
 45e:	46 95       	lsr	r20
 460:	f1 df       	rcall	.-30     	; 0x444 <__fp_splitA>
 462:	08 c0       	rjmp	.+16     	; 0x474 <__stack+0x15>
 464:	16 16       	cp	r1, r22
 466:	17 06       	cpc	r1, r23
 468:	18 06       	cpc	r1, r24
 46a:	99 1f       	adc	r25, r25
 46c:	f1 cf       	rjmp	.-30     	; 0x450 <__fp_splitA+0xc>
 46e:	86 95       	lsr	r24
 470:	71 05       	cpc	r23, r1
 472:	61 05       	cpc	r22, r1
 474:	08 94       	sec
 476:	08 95       	ret

00000478 <__fp_zero>:
 478:	e8 94       	clt

0000047a <__fp_szero>:
 47a:	bb 27       	eor	r27, r27
 47c:	66 27       	eor	r22, r22
 47e:	77 27       	eor	r23, r23
 480:	cb 01       	movw	r24, r22
 482:	97 f9       	bld	r25, 7
 484:	08 95       	ret

00000486 <__mulsf3>:
 486:	0b d0       	rcall	.+22     	; 0x49e <__mulsf3x>
 488:	c4 cf       	rjmp	.-120    	; 0x412 <__fp_round>
 48a:	b5 df       	rcall	.-150    	; 0x3f6 <__fp_pscA>
 48c:	28 f0       	brcs	.+10     	; 0x498 <__mulsf3+0x12>
 48e:	ba df       	rcall	.-140    	; 0x404 <__fp_pscB>
 490:	18 f0       	brcs	.+6      	; 0x498 <__mulsf3+0x12>
 492:	95 23       	and	r25, r21
 494:	09 f0       	breq	.+2      	; 0x498 <__mulsf3+0x12>
 496:	a6 cf       	rjmp	.-180    	; 0x3e4 <__fp_inf>
 498:	ab cf       	rjmp	.-170    	; 0x3f0 <__fp_nan>
 49a:	11 24       	eor	r1, r1
 49c:	ee cf       	rjmp	.-36     	; 0x47a <__fp_szero>

0000049e <__mulsf3x>:
 49e:	ca df       	rcall	.-108    	; 0x434 <__fp_split3>
 4a0:	a0 f3       	brcs	.-24     	; 0x48a <__mulsf3+0x4>

000004a2 <__mulsf3_pse>:
 4a2:	95 9f       	mul	r25, r21
 4a4:	d1 f3       	breq	.-12     	; 0x49a <__mulsf3+0x14>
 4a6:	95 0f       	add	r25, r21
 4a8:	50 e0       	ldi	r21, 0x00	; 0
 4aa:	55 1f       	adc	r21, r21
 4ac:	62 9f       	mul	r22, r18
 4ae:	f0 01       	movw	r30, r0
 4b0:	72 9f       	mul	r23, r18
 4b2:	bb 27       	eor	r27, r27
 4b4:	f0 0d       	add	r31, r0
 4b6:	b1 1d       	adc	r27, r1
 4b8:	63 9f       	mul	r22, r19
 4ba:	aa 27       	eor	r26, r26
 4bc:	f0 0d       	add	r31, r0
 4be:	b1 1d       	adc	r27, r1
 4c0:	aa 1f       	adc	r26, r26
 4c2:	64 9f       	mul	r22, r20
 4c4:	66 27       	eor	r22, r22
 4c6:	b0 0d       	add	r27, r0
 4c8:	a1 1d       	adc	r26, r1
 4ca:	66 1f       	adc	r22, r22
 4cc:	82 9f       	mul	r24, r18
 4ce:	22 27       	eor	r18, r18
 4d0:	b0 0d       	add	r27, r0
 4d2:	a1 1d       	adc	r26, r1
 4d4:	62 1f       	adc	r22, r18
 4d6:	73 9f       	mul	r23, r19
 4d8:	b0 0d       	add	r27, r0
 4da:	a1 1d       	adc	r26, r1
 4dc:	62 1f       	adc	r22, r18
 4de:	83 9f       	mul	r24, r19
 4e0:	a0 0d       	add	r26, r0
 4e2:	61 1d       	adc	r22, r1
 4e4:	22 1f       	adc	r18, r18
 4e6:	74 9f       	mul	r23, r20
 4e8:	33 27       	eor	r19, r19
 4ea:	a0 0d       	add	r26, r0
 4ec:	61 1d       	adc	r22, r1
 4ee:	23 1f       	adc	r18, r19
 4f0:	84 9f       	mul	r24, r20
 4f2:	60 0d       	add	r22, r0
 4f4:	21 1d       	adc	r18, r1
 4f6:	82 2f       	mov	r24, r18
 4f8:	76 2f       	mov	r23, r22
 4fa:	6a 2f       	mov	r22, r26
 4fc:	11 24       	eor	r1, r1
 4fe:	9f 57       	subi	r25, 0x7F	; 127
 500:	50 40       	sbci	r21, 0x00	; 0
 502:	8a f0       	brmi	.+34     	; 0x526 <__mulsf3_pse+0x84>
 504:	e1 f0       	breq	.+56     	; 0x53e <__mulsf3_pse+0x9c>
 506:	88 23       	and	r24, r24
 508:	4a f0       	brmi	.+18     	; 0x51c <__mulsf3_pse+0x7a>
 50a:	ee 0f       	add	r30, r30
 50c:	ff 1f       	adc	r31, r31
 50e:	bb 1f       	adc	r27, r27
 510:	66 1f       	adc	r22, r22
 512:	77 1f       	adc	r23, r23
 514:	88 1f       	adc	r24, r24
 516:	91 50       	subi	r25, 0x01	; 1
 518:	50 40       	sbci	r21, 0x00	; 0
 51a:	a9 f7       	brne	.-22     	; 0x506 <__mulsf3_pse+0x64>
 51c:	9e 3f       	cpi	r25, 0xFE	; 254
 51e:	51 05       	cpc	r21, r1
 520:	70 f0       	brcs	.+28     	; 0x53e <__mulsf3_pse+0x9c>
 522:	60 cf       	rjmp	.-320    	; 0x3e4 <__fp_inf>
 524:	aa cf       	rjmp	.-172    	; 0x47a <__fp_szero>
 526:	5f 3f       	cpi	r21, 0xFF	; 255
 528:	ec f3       	brlt	.-6      	; 0x524 <__mulsf3_pse+0x82>
 52a:	98 3e       	cpi	r25, 0xE8	; 232
 52c:	dc f3       	brlt	.-10     	; 0x524 <__mulsf3_pse+0x82>
 52e:	86 95       	lsr	r24
 530:	77 95       	ror	r23
 532:	67 95       	ror	r22
 534:	b7 95       	ror	r27
 536:	f7 95       	ror	r31
 538:	e7 95       	ror	r30
 53a:	9f 5f       	subi	r25, 0xFF	; 255
 53c:	c1 f7       	brne	.-16     	; 0x52e <__mulsf3_pse+0x8c>
 53e:	fe 2b       	or	r31, r30
 540:	88 0f       	add	r24, r24
 542:	91 1d       	adc	r25, r1
 544:	96 95       	lsr	r25
 546:	87 95       	ror	r24
 548:	97 f9       	bld	r25, 7
 54a:	08 95       	ret

0000054c <__divmodhi4>:
 54c:	97 fb       	bst	r25, 7
 54e:	09 2e       	mov	r0, r25
 550:	07 26       	eor	r0, r23
 552:	0a d0       	rcall	.+20     	; 0x568 <__divmodhi4_neg1>
 554:	77 fd       	sbrc	r23, 7
 556:	04 d0       	rcall	.+8      	; 0x560 <__divmodhi4_neg2>
 558:	0c d0       	rcall	.+24     	; 0x572 <__udivmodhi4>
 55a:	06 d0       	rcall	.+12     	; 0x568 <__divmodhi4_neg1>
 55c:	00 20       	and	r0, r0
 55e:	1a f4       	brpl	.+6      	; 0x566 <__divmodhi4_exit>

00000560 <__divmodhi4_neg2>:
 560:	70 95       	com	r23
 562:	61 95       	neg	r22
 564:	7f 4f       	sbci	r23, 0xFF	; 255

00000566 <__divmodhi4_exit>:
 566:	08 95       	ret

00000568 <__divmodhi4_neg1>:
 568:	f6 f7       	brtc	.-4      	; 0x566 <__divmodhi4_exit>
 56a:	90 95       	com	r25
 56c:	81 95       	neg	r24
 56e:	9f 4f       	sbci	r25, 0xFF	; 255
 570:	08 95       	ret

00000572 <__udivmodhi4>:
 572:	aa 1b       	sub	r26, r26
 574:	bb 1b       	sub	r27, r27
 576:	51 e1       	ldi	r21, 0x11	; 17
 578:	07 c0       	rjmp	.+14     	; 0x588 <__udivmodhi4_ep>

0000057a <__udivmodhi4_loop>:
 57a:	aa 1f       	adc	r26, r26
 57c:	bb 1f       	adc	r27, r27
 57e:	a6 17       	cp	r26, r22
 580:	b7 07       	cpc	r27, r23
 582:	10 f0       	brcs	.+4      	; 0x588 <__udivmodhi4_ep>
 584:	a6 1b       	sub	r26, r22
 586:	b7 0b       	sbc	r27, r23

00000588 <__udivmodhi4_ep>:
 588:	88 1f       	adc	r24, r24
 58a:	99 1f       	adc	r25, r25
 58c:	5a 95       	dec	r21
 58e:	a9 f7       	brne	.-22     	; 0x57a <__udivmodhi4_loop>
 590:	80 95       	com	r24
 592:	90 95       	com	r25
 594:	bc 01       	movw	r22, r24
 596:	cd 01       	movw	r24, r26
 598:	08 95       	ret

0000059a <_exit>:
 59a:	f8 94       	cli

0000059c <__stop_program>:
 59c:	ff cf       	rjmp	.-2      	; 0x59c <__stop_program>
